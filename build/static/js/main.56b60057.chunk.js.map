{"version":3,"sources":["logo.svg","component/Prices.js","component/Counts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Prices","props","addClass","i","state","selected","toggleClass","setState","getGoldPrice","Math","round","priceGoldAlt","priceGold","getRetailPrice","priceRetailAlt","priceRetail","units","itemValues","className","this","map","value","index","key","onClick","bind","Component","Counts","validateCount","newValue","minValue","maxValue","handlerIncrease","countValue","handlerDecrease","handlerInput","event","Number","target","type","onChange","App","getJson","img","imgName","split","length","join","xhr","XMLHttpRequest","open","send","status","console","log","statusText","productsList","JSON","parse","responseText","list","code","href","src","imgPrefix","primaryImageUrl","alt","title","unitFull","unitRatio","unitRatioAlt","unitAlt","data-url","data-product-id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56b60057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n// import Tabs from './Tabs';\r\n\r\n\r\nclass Prices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.units = ['За м. кв.', 'За упаковку']\r\n        this.state = {\r\n            selected: 0,\r\n            priceGoldAlt: props.itemValues.priceGoldAlt,\r\n            priceRetailAlt: props.itemValues.priceRetailAlt,\r\n            priceGold: props.itemValues.priceGold,\r\n            priceRetail: props.itemValues.priceRetail,\r\n        }\r\n    }\r\n\r\n    addClass = i => {\r\n\t\tif (this.state.selected === i) {\r\n\t\t\treturn 'unit--select unit--active'\r\n\t\t} else {\r\n\t\t\treturn 'unit--select'\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleClass = i => {\r\n\t\tthis.setState({            \r\n\t\t\tselected: i\r\n\t\t})\t\t\r\n    }\r\n    \r\n    getGoldPrice = () => {\r\n        if (this.state.selected === 0) {\r\n            return Math.round(this.state.priceGoldAlt)\r\n        } else {\r\n            return Math.round(this.state.priceGold)\r\n        }\r\n    }\r\n\r\n    getRetailPrice = () => {\r\n            if (this.state.selected === 1) {\r\n            return Math.round(this.state.priceRetailAlt)\r\n        } else {\r\n            return Math.round(this.state.priceRetail)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product_units-wrapper\">\r\n            <div className=\"product_units\">\r\n\t\t\t\t<div className=\"unit--wrapper\">\r\n\t\t\t\t\t{this.units.map((value, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className={this.addClass(index)} key={index} onClick={this.toggleClass.bind(this, index)}>\r\n\t\t\t\t\t\t\t<p className=\"ng-binding\">{value}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n                <p className=\"product_price_club_card\">\r\n                    <span className=\"product_price_club_card_text\">По карте<br />клуба</span>\r\n                    <span className=\"goldPrice\">{this.getGoldPrice()} ₽</span>\r\n                    <span className=\"rouble__i black__i\"></span>\r\n                </p>\r\n                <p className=\"product_price_default\">\r\n                    <span className=\"retailPrice\">{this.getRetailPrice()} ₽</span>\r\n                    <span className=\"rouble__i black__i\"></span>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Prices;","import React, { Component } from 'react';\r\n\r\nclass Counts extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcountValue: 0,\r\n\t\t\tminValue: 0,\r\n\t\t\tmaxValue: 10\r\n\t\t}\r\n\t}\r\n\r\n\tvalidateCount = newValue => {\r\n\t\tif (newValue >= this.state.minValue && newValue <= this.state.maxValue) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\thandlerIncrease = () => {\r\n\t\tvar newValue = this.state.countValue + 1;\r\n\t\tif (this.validateCount(newValue)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountValue: newValue\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thandlerDecrease = () => {\r\n\t\tvar newValue = this.state.countValue - 1;\r\n\t\tif (this.validateCount(newValue)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountValue: newValue\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandlerInput = event => {\r\n\t\tvar value = Number(event.target.value);\r\n\t\tif (this.validateCount(value)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountValue: value\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"product_count_wrapper\">\r\n\t\t\t\t<div className=\"stepper\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"product__count stepper-input\"\r\n\t\t\t\t\t\tonChange={this.handlerInput.bind(this)}\r\n\t\t\t\t\t\tvalue={this.state.countValue}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"stepper-arrow up\" onClick={this.handlerIncrease.bind(this)}></span>\r\n\t\t\t\t\t<span className=\"stepper-arrow down\" onClick={this.handlerDecrease.bind(this)}></span>                                            \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Counts;","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport Prices from './component/Prices';\nimport Counts from './component/Counts';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      countValue: 1\n    }\n    this.getJson();\n  }\n\n\n  imgPrefix(img) {\n    var imgName = img.split('.');\n    imgName[imgName.length - 2] = imgName[imgName.length - 2] + '_220x220_1';\n\n    return imgName.join('.')\n  }\n\n  getJson() {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', 'products.json', false);    \n    xhr.send();\n    if (xhr.status !== 200) {\n      console.log(xhr.status + 'Product: ' + xhr.statusText);\n    } else {\n      this.productsList = JSON.parse(xhr.responseText);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"products_page pg_0\">\n        {this.productsList.map((list, index) => {\n          return (\n            <div className=\"product product_horizontal\" key={index}>\n              <span className=\"product_code\">Код: {list.code}</span>\n              <div className=\"product_status_tooltip_container\">\n                <span className=\"product_status\">Наличие</span>\n              </div>\n              <div className=\"product_photo\">\n                <a href=\"#\" className=\"url--link product__link\">\n                  <img src={this.imgPrefix(list.primaryImageUrl)} alt=\"\" />\n                </a>\n              </div>\n              <div className=\"product_description\">\n                <a href=\"#\" className=\"product__link\">{list.title}</a>\n              </div>\n              <div className=\"product_tags hidden-sm\">\n                <p>Могут понадобиться:</p>\n                <div className='products-add'>\n                  <a href=\"#\" className=\"url--link\">подложка,</a>\n                  <a href=\"#\" className=\"url--link\">плинтус натуральный,</a>\n                  <a href=\"#\" className=\"url--link\">рулетка,</a>\n                  <a href=\"#\" className=\"url--link\">набор для укладки ламината,</a>\n                  <a href=\"#\" className=\"url--link\">ножовка по ламинату,</a>\n                  <a href=\"#\" className=\"url--link\">гель для стыков ламината Clic Protect.</a>\n                </div>\n              </div>\n\n              <Prices itemValues={list} />\n\n              <div className=\"product_price_points\">\n                <p className=\"ng-binding\">Можно купить за 231,75 балла</p>\n              </div>\n              <div className=\"list--unit-padd\"></div>\n              <div className=\"list--unit-desc\">\n                <div className=\"unit--info\">\n                  <div className=\"unit--desc-i\"></div>\n                  <div className=\"unit--desc-t\">\n                    <p>\n                      <span className=\"ng-binding\">Продается {list.unitFull}:</span>\n                      <span className=\"unit--infoInn\">{list.unitRatio + ' ' + list.unitFull}. = {list.unitRatioAlt + ' ' + list.unitAlt} </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"product__wrapper\">\n                <Counts />\n                <span className=\"btn btn_cart\" data-url=\"/cart/\" data-product-id={list.code}>\n                <img className=\"shop-cart\" src=\"https://img.icons8.com/ios/50/000000/shopping-cart.png\"/>\n                  <span className=\"ng-binding\">В корзину</span>\n                </span>\n              </div>\n            </div>\n          )\n        }\n        )\n        }\n      </div >\n    )\n\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}